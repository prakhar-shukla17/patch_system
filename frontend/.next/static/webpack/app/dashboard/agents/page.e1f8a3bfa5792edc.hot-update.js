"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/agents/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; }\n/* harmony export */ });\nconst API_BASE_URL = \"http://localhost:5000/api\" || 0;\nclass ApiClient {\n    setToken(token) {\n        this.token = token;\n        if (true) {\n            localStorage.setItem(\"auth_token\", token);\n        }\n    }\n    getToken() {\n        if (!this.token && \"object\" !== \"undefined\") {\n            this.token = localStorage.getItem(\"auth_token\");\n        }\n        return this.token;\n    }\n    clearToken() {\n        this.token = null;\n        if (true) {\n            localStorage.removeItem(\"auth_token\");\n        }\n    }\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        const token = this.getToken();\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...token && {\n                    Authorization: \"Bearer \".concat(token)\n                },\n                ...options.headers\n            },\n            ...options\n        };\n        try {\n            const response = await fetch(url, config);\n            if (!response.ok) {\n                if (response.status === 401) {\n                    this.clearToken();\n                    throw new Error(\"Authentication failed\");\n                }\n                const errorData = await response.json().catch(()=>({}));\n                throw new Error(errorData.error || \"HTTP error! status: \".concat(response.status));\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"API request failed:\", error);\n            throw error;\n        }\n    }\n    // Authentication endpoints\n    async register(userData) {\n        return this.request(\"/auth/register\", {\n            method: \"POST\",\n            body: JSON.stringify(userData)\n        });\n    }\n    async login(credentials) {\n        return this.request(\"/auth/login\", {\n            method: \"POST\",\n            body: JSON.stringify(credentials)\n        });\n    }\n    async getCurrentUser() {\n        return this.request(\"/auth/me\");\n    }\n    // Asset endpoints\n    async getAssets() {\n        return this.request(\"/assets\");\n    }\n    async getAsset(id) {\n        return this.request(\"/assets/\".concat(id));\n    }\n    async createAsset(assetData) {\n        return this.request(\"/assets\", {\n            method: \"POST\",\n            body: JSON.stringify(assetData)\n        });\n    }\n    async updateAsset(id, assetData) {\n        return this.request(\"/assets/\".concat(id), {\n            method: \"PUT\",\n            body: JSON.stringify(assetData)\n        });\n    }\n    async deleteAsset(id) {\n        return this.request(\"/assets/\".concat(id), {\n            method: \"DELETE\"\n        });\n    }\n    // Patch endpoints\n    async getPatches() {\n        return this.request(\"/patches\");\n    }\n    async getPatchesForAsset(assetId) {\n        return this.request(\"/patches/asset/\".concat(assetId));\n    }\n    async scanForPatches(assetId) {\n        return this.request(\"/patches/scan/\".concat(assetId), {\n            method: \"POST\"\n        });\n    }\n    async updatePatchStatus(patchId, status) {\n        return this.request(\"/patches/\".concat(patchId), {\n            method: \"PUT\",\n            body: JSON.stringify({\n                status\n            })\n        });\n    }\n    async getPatchStats() {\n        return this.request(\"/patches/stats\");\n    }\n    async deletePatch(patchId) {\n        return this.request(\"/patches/\".concat(patchId), {\n            method: \"DELETE\"\n        });\n    }\n    async installPatch(patchId) {\n        return this.request(\"/patches/\".concat(patchId, \"/install\"), {\n            method: \"POST\"\n        });\n    }\n    async getDownloadUrl(patchId) {\n        return this.request(\"/patches/\".concat(patchId, \"/download-url\"), {\n            method: \"GET\"\n        });\n    }\n    // Agent management methods\n    async getAvailableAgents() {\n        return this.request(\"/agent/agents\", {\n            method: \"GET\"\n        });\n    }\n    async startAgent(agentId, apiKey) {\n        return this.request(\"/agent/start\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                agentId,\n                apiKey\n            })\n        });\n    }\n    async stopAgent(agentId) {\n        return this.request(\"/agent/stop\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                agentId\n            })\n        });\n    }\n    async installViaAgent(agentId, appName, appId, installationMethod) {\n        return this.request(\"/agent/install\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                agentId,\n                appName,\n                appId: appId || appName,\n                installationMethod: installationMethod || \"WINGET\"\n            })\n        });\n    }\n    async getAgentStatus(agentId) {\n        return this.request(\"/agent/status?agentId=\".concat(agentId), {\n            method: \"GET\"\n        });\n    }\n    // System info endpoints\n    async getSystemInfo() {\n        return this.request(\"/system-info\");\n    }\n    async testMacAddress() {\n        return this.request(\"/system-info/test-mac\");\n    }\n    constructor(baseURL){\n        this.token = null;\n        this.baseURL = baseURL;\n    }\n}\nconst apiClient = new ApiClient(API_BASE_URL);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});